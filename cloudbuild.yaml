# steps:
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '.']
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['push', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}']
#   - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#     entrypoint: gcloud
#     args:
#       - 'run'
#       - 'deploy'
#       - '${_SERVICE_NAME}'
#       - '--image'
#       - 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}'
#       - '--platform'
#       - 'managed'
#       - '--region'
#       - '${_REGION}'
#       - '--allow-unauthenticated' 
#       - '--port'
#       - '3000' 
    

# options:
#   # machineType: 'e2-standard-2'
#   # diskSizeGb: 100
#   logging: CLOUD_LOGGING_ONLY

# substitutions:
#   _SERVICE_NAME: 'my-react-app'
#   _REGION: 'asia-south2'

steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '.']
  
  # Step 2: Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}']

  # Step 3: Deploy to multiple regions
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', 'my-app-us-central1', '--image', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '--region','${_DEPLOY_REGION_1}','--allow-unauthenticated','--port', '3000']
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', 'my-app-europe-west1', '--image', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '--region', '${_DEPLOY_REGION_2}','--allow-unauthenticated','--port', '3000']
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', 'my-app-asia-east1', '--image', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '--region', '${_DEPLOY_REGION_3}','--allow-unauthenticated','--port', '3000']

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _SERVICE_NAME: 'my-react-app'
  _DEPLOY_REGION_1: 'us-central1'
  _DEPLOY_REGION_2: 'europe-west1'
  _DEPLOY_REGION_3: 'asia-east1'
