
    

# options:
#   # machineType: 'e2-standard-2'
#   # diskSizeGb: 100
#   logging: CLOUD_LOGGING_ONLY

# substitutions:
#   _SERVICE_NAME: 'my-react-app'
#   _REGION: 'asia-south2'

#USING CLOUD BUILDER

# steps:
#   # Step 1: Build the Docker image
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '.']
  
#   # Step 2: Push the Docker image to Container Registry
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['push', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}']

#   # Step 3: Deploy to multiple regions
#   - name: 'gcr.io/cloud-builders/gcloud'
#     args: ['run', 'deploy', '${_SERVICE_NAME}-${_DEPLOY_REGION_3}', '--image', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '--region','${_DEPLOY_REGION_1}','--allow-unauthenticated','--port', '3000']
#   - name: 'gcr.io/cloud-builders/gcloud'
#     args: ['run', 'deploy', '${_SERVICE_NAME}-${_DEPLOY_REGION_2}', '--image', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '--region', '${_DEPLOY_REGION_2}','--allow-unauthenticated','--port', '3000']
#   - name: 'gcr.io/cloud-builders/gcloud'
#     args: ['run', 'deploy', '${_SERVICE_NAME}-${_DEPLOY_REGION_3}', '--image', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '--region', '${_DEPLOY_REGION_3}','--allow-unauthenticated','--port', '3000']

# steps:
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '.']
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['push', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}']
#   - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#     entrypoint: gcloud
#     args:
#       - 'run'
#       - 'deploy'
#       - '${_SERVICE_NAME}-${_DEPLOY_REGION_1}'
#       - '--image'
#       - 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}'
#       - '--platform'
#       - 'managed'
#       - '--region'
#       - '${_DEPLOY_REGION_1}'
#       - '--allow-unauthenticated'
#       - '--port'
#       - '3000'
#   - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#     entrypoint: gcloud
#     args:
#       - 'run'
#       - 'deploy'
#       - '${_SERVICE_NAME}-${_DEPLOY_REGION_2}'
#       - '--image'
#       - 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}'
#       - '--platform'
#       - 'managed'
#       - '--region'
#       - '${_DEPLOY_REGION_2}'
#       - '--allow-unauthenticated'
#       - '--port'
#       - '3000'
#   - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#     entrypoint: gcloud
#     args:
#       - 'run'
#       - 'deploy'
#       - '${_SERVICE_NAME}-${_DEPLOY_REGION_3}'
#       - '--image'
#       - 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}'
#       - '--platform'
#       - 'managed'
#       - '--region'
#       - '${_DEPLOY_REGION_3}'
#       - '--allow-unauthenticated'
#       - '--port'
#       - '3000'

# options:
#   logging: CLOUD_LOGGING_ONLY

# substitutions:
#   _SERVICE_NAME: 'react'
#   _DEPLOY_REGION_1: 'us-central1'
#   _DEPLOY_REGION_2: 'europe-west1'
#   _DEPLOY_REGION_3: 'asia-east1'



steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '.']
  
  # Step 2: Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}']

  # Step 3: Deploy to multiple regions
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', '${_SERVICE_NAME}-${_DEPLOY_REGION_1}', '--image', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '--region', '${_DEPLOY_REGION_1}', '--allow-unauthenticated', '--port', '3000']
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', '${_SERVICE_NAME}-${_DEPLOY_REGION_2}', '--image', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '--region', '${_DEPLOY_REGION_2}', '--allow-unauthenticated', '--port', '3000']
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', '${_SERVICE_NAME}-${_DEPLOY_REGION_3}', '--image', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '--region', '${_DEPLOY_REGION_3}', '--allow-unauthenticated', '--port', '3000']

  # Step 4: Set IAM policy bindings for unauthenticated access
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'services', 'add-iam-policy-binding', '${_SERVICE_NAME}-${_DEPLOY_REGION_1}', '--member="allUsers"', '--role="roles/run.invoker"', '--region=${_DEPLOY_REGION_1}']
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'services', 'add-iam-policy-binding', '${_SERVICE_NAME}-${_DEPLOY_REGION_2}', '--member="allUsers"', '--role="roles/run.invoker"', '--region=${_DEPLOY_REGION_2}']
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'services', 'add-iam-policy-binding', '${_SERVICE_NAME}-${_DEPLOY_REGION_3}', '--member="allUsers"', '--role="roles/run.invoker"', '--region=${_DEPLOY_REGION_3}']

options:
  logging: CLOUD_LOGGING_ONLY
#

substitutions:
  _SERVICE_NAME: 'react'
  _DEPLOY_REGION_1: 'us-central1'
  _DEPLOY_REGION_2: 'europe-west1'
  _DEPLOY_REGION_3: 'asia-east1'
